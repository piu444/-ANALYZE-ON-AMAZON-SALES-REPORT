import pandas as pd
import numpy as np
import matplotlib.pyplot as plt

df = pd.read_csv('Amazon_Sale_Report_Cleaned_Interpolated.csv')

# Most common order ID
most_common_order = df['Order ID'].value_counts().idxmax()
order_count = df['Order ID'].value_counts().max()
print(f"Most common order ID: {most_common_order} with {order_count} occurrences.")

# most 10 common order IDs
most_common_orders = df['Order ID'].value_counts().head(10)
print("Top 10 most common order IDs:")
print(most_common_orders)

# # most common product
# most_common_product = df['Category'].value_counts().idxmax()
# product_count = df['Category'].value_counts().max()
# print(f"Most common product: {most_common_product} with {product_count} occurrences.")

# # most common ship city
# most_commom_city = df['ship-city'].value_counts().idxmax()
# city_count = df['ship-city'].value_counts().max()
# print(f"Most common ship city: {most_commom_city} with {city_count} occurrences.")



# # total order by each city
# total_cities_order = df.groupby('ship-city')['Order ID'].nunique().sort_values(ascending=False)
# print("Total orders by each city:")
# print(total_cities_order)

# # total sales per city
# total_sales_per_city = df.groupby('ship-city')['Amount'].sum().sort_values(ascending=False)
# print("Total sales per city:")
# print(total_sales_per_city.head(10))


# total qty per city
total_qty_per_city = df.groupby('ship-city')['Qty'].sum().sort_values(ascending=False)
print("Total quantity sold per city:")
print(total_qty_per_city.head(10))

# # average common amount 
# average_amount = df['Amount'].value_counts().idxmax()
# average_count = df['Amount'].value_counts().max()
# print(f"Most common sale amount: {average_amount} with {average_count} occurrences.")


# # total sales
# total_sales = df['Amount'].sum()
# print(f"Total sales amount: {total_sales:.2f}")

# # total quantity sold
# total_quantity = df['Qty'].sum()
# print(f"Total quantity sold: {total_quantity}")



# # total completed orders
# total_completed_orders = df[df['Status'] == 'Shipped - Delivered to Buyer']['Order ID'].nunique()
# print(f"Total completed orders: {total_completed_orders}")

# # total shipped orders
# total_shipped_orders = df[df['Status'] == 'Shipped']['Order ID'].nunique()
# print(f"Total shipped orders: {total_shipped_orders}")

# # total return orders
# total_return_orders = df[df['Status'] == 'Shipped - Returned to Seller']['Order ID'].nunique()
# print(f"Total return orders: {total_return_orders}")


# average quantity per order
# average_qty_per_order = df.groupby('Order ID')['Qty'].sum().mean()
# print(f"Average quantity per order: {average_qty_per_order:.2f}")

# # Clean 'Amount' column: remove ₹ and commas, convert to float
# df['Amount'] = df['Amount'].replace('[₹,]', '', regex=True).astype(float)

# # Calculate the total revenue from T-shirts
# tshirt_df = df[df['Category'] == 'T-shirt']
# total_tshirt_revenue = tshirt_df['Amount'].sum()

# print(f"Total Revenue Generated by T-shirts: ₹{total_tshirt_revenue:.2f}")


# # Group by customer and sum their sales
# customer_sales = df.groupby('Order ID')['Amount'].sum().sort_values(ascending=False)
# total_sales = df['Amount'].sum()
# top10_sales = customer_sales.head(10).sum()
# contribution = (top10_sales / total_sales) * 100
# print(f"Top 10 customers contribute {contribution:.2f}% of total sales.")


# top state s by sales
top_states = df.groupby('ship-state')['Amount'].sum().sort_values(ascending=False).head(10)
print("Top 10 states by sales:")
print(top_states)


